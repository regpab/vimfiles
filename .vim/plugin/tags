!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Vim	C,constant	/constant definitions/
!_TAG_KIND_DESCRIPTION!Vim	a,augroup	/autocommand groups/
!_TAG_KIND_DESCRIPTION!Vim	c,command	/user-defined commands/
!_TAG_KIND_DESCRIPTION!Vim	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!Vim	k,class	/vim9script classes/
!_TAG_KIND_DESCRIPTION!Vim	m,map	/maps/
!_TAG_KIND_DESCRIPTION!Vim	n,filename	/vimball filename/
!_TAG_KIND_DESCRIPTION!Vim	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Vim	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/p.savchkov/.vim/plugin/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	//
<leader>g	grep-operator.vim	/^nnoremap <leader>g :set operatorfunc=<SID>GrepOperator<cr>g@$/;"	m
<leader>g	grep-operator.vim	/^vnoremap <leader>g :<c-u>call <SID>GrepOperator(visualmode())<cr>$/;"	m
Rg	vim-ripgrep.vim	/^command! -nargs=* -complete=file Rg :call s:Rg(<q-args>)$/;"	c
RgRoot	vim-ripgrep.vim	/^command! RgRoot :call s:RgShowRoot()$/;"	c
RgVisual	vim-ripgrep.vim	/^fun! g:RgVisual() range$/;"	f
g:loaded_rg	vim-ripgrep.vim	/^let g:loaded_rg = 1$/;"	v
g:rg_binary	vim-ripgrep.vim	/^  let g:rg_binary = 'rg'$/;"	v
g:rg_command	vim-ripgrep.vim	/^  let g:rg_command = g:rg_binary . ' --vimgrep'$/;"	v
g:rg_format	vim-ripgrep.vim	/^  let g:rg_format = "%f:%l:%c:%m"$/;"	v
g:rg_root_types	vim-ripgrep.vim	/^  let g:rg_root_types = ['.git']$/;"	v
g:rg_window_location	vim-ripgrep.vim	/^  let g:rg_window_location = 'botright'$/;"	v
s:GrepOperator	grep-operator.vim	/^function! s:GrepOperator(type)$/;"	f
s:Rg	vim-ripgrep.vim	/^fun! s:Rg(txt)$/;"	f
s:RgGetVisualSelection	vim-ripgrep.vim	/^fun! s:RgGetVisualSelection()$/;"	f
s:RgGrepContext	vim-ripgrep.vim	/^fun! s:RgGrepContext(search, txt)$/;"	f
s:RgHasFile	vim-ripgrep.vim	/^fun! s:RgHasFile(path)$/;"	f
s:RgHighlight	vim-ripgrep.vim	/^fun! s:RgHighlight(txt)$/;"	f
s:RgMakePath	vim-ripgrep.vim	/^fun! s:RgMakePath(dirs, dir)$/;"	f
s:RgPathContext	vim-ripgrep.vim	/^fun! s:RgPathContext(search, txt)$/;"	f
s:RgRootDir	vim-ripgrep.vim	/^fun! s:RgRootDir()$/;"	f
s:RgSearch	vim-ripgrep.vim	/^fun! s:RgSearch(txt)$/;"	f
s:RgSearchTerm	vim-ripgrep.vim	/^fun! s:RgSearchTerm(txt)$/;"	f
s:RgShowRoot	vim-ripgrep.vim	/^fun! s:RgShowRoot()$/;"	f
